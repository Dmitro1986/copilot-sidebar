[
  {
    "timestamp": "2025-08-24T18:19:05.546Z",
    "user": "как автоматизировать Export → Entire flow",
    "assistant": "**Как автоматизировать экспорт всего потока в Node‑RED**\n\n| Что | Как сделать | Что получится |\n|-----|-------------|---------------|\n| **Через REST‑API** | 1. Включите *admin API* (если ещё не включено).<br>2. Отправьте GET‑запрос: `http://<host>:1880/flow?export=true`.<br>3. В ответе получите JSON‑строку с полным описанием всех узлов. | Автоматический экспорт можно вызывать из любого скрипта, из другого потока (HTTP‑Request‑node) или из cron‑узла. |\n| **Через CLI** | 1. Откройте терминал.<br>2. Выполните: `node-red-admin export > flows.json`.<br>3. Файл `flows.json` будет содержать весь поток. | Удобно для резервного копирования в CI/CD, скриптах деплоя. |\n| **Через узел** | 1. Установите `node-red-contrib-export` (или `node-red-node-utility`).<br>2. Добавьте узел **Export Flow** в поток.<br>3. Настройте путь сохранения (например, `flows-{{date}}.json`). | Экспорт можно запускать по событию (клик, таймер, MQTT‑сообщение). |\n\n### Быстрый пример через Function‑node\n\n```js\n// Function node: exportFlow\nconst request = require('request'); // если node-red-node-request подключён\n\nconst options = {\n  url: 'http://localhost:1880/flow?export=true',\n  method: 'GET',\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (!error && response.statusCode === 200) {\n    // Сохраняем в msg.payload\n    msg.payload = body;\n    node.send(msg);\n  } else {\n    node.error('Export failed', msg);\n  }\n});\n```\n\n> **Важно:**  \n> - Для доступа к API без авторизации включите `adminAuth` в `settings.js`.  \n> - Если поток большой, экспорт может занять несколько секунд – учитывайте это в тайм‑ауте.\n\n### Как запланировать экспорт\n\n1. Добавьте узел **cron** (или **inject** с таймером).  \n2. Подключите его к узлу **Export Flow** (или Function‑node выше).  \n3. Установите расписание, например, `0 3 * * *` – каждый день в 3 ч.  \n\nТеперь ваш поток будет автоматически сохраняться в файл/JSON без ручного вмешательства.",
    "hasFlowContext": true,
    "provider": "ollama",
    "model": "gpt-oss:20b"
  }
]