// models-config.js - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è AI –º–æ–¥–µ–ª–µ–π –¥–ª—è Copilot

class ModelsConfig {
    constructor() {
        this.models = {
            // OpenAI –º–æ–¥–µ–ª–∏
            'openai-gpt-3.5': {
                id: 'openai-gpt-3.5',
                name: 'OpenAI GPT-3.5 Turbo',
                provider: 'openai',
                endpoint: 'https://api.openai.com/v1/chat/completions',
                model: 'gpt-3.5-turbo',
                maxTokens: 4096,
                temperature: 0.3,
                requiresApiKey: true,
                icon: 'ü§ñ',
                description: '–ë—ã—Å—Ç—Ä–∞—è –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–¥–∞',
                features: ['code-analysis', 'recommendations', 'security-check']
            },
            'openai-gpt-4': {
                id: 'openai-gpt-4',
                name: 'OpenAI GPT-4',
                provider: 'openai',
                endpoint: 'https://api.openai.com/v1/chat/completions',
                model: 'gpt-4',
                maxTokens: 8192,
                temperature: 0.3,
                requiresApiKey: true,
                icon: 'üß†',
                description: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞',
                features: ['code-analysis', 'recommendations', 'security-check', 'architecture-review']
            },
            
            // Claude –º–æ–¥–µ–ª–∏
            'claude-3-haiku': {
                id: 'claude-3-haiku',
                name: 'Claude 3 Haiku',
                provider: 'anthropic',
                endpoint: 'https://api.anthropic.com/v1/messages',
                model: 'claude-3-haiku-20240307',
                maxTokens: 4096,
                temperature: 0.3,
                requiresApiKey: true,
                icon: 'üé≠',
                description: '–ë—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å Claude –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞',
                features: ['code-analysis', 'recommendations']
            },
            'claude-3-sonnet': {
                id: 'claude-3-sonnet',
                name: 'Claude 3 Sonnet',
                provider: 'anthropic',
                endpoint: 'https://api.anthropic.com/v1/messages',
                model: 'claude-3-sonnet-20240229',
                maxTokens: 4096,
                temperature: 0.3,
                requiresApiKey: true,
                icon: 'üéº',
                description: '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞',
                features: ['code-analysis', 'recommendations', 'security-check']
            },
            
            // –õ–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏
            'ollama-codellama': {
                id: 'ollama-codellama',
                name: 'Ollama CodeLlama',
                provider: 'ollama',
                endpoint: 'http://localhost:11434/api/generate',
                model: 'codellama:7b',
                maxTokens: 2048,
                temperature: 0.2,
                requiresApiKey: false,
                icon: 'ü¶ô',
                description: '–õ–æ–∫–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–¥–∞',
                features: ['code-analysis', 'recommendations']
            },
            'ollama-llama2': {
                id: 'ollama-llama2',
                name: 'Ollama Llama2',
                provider: 'ollama',
                endpoint: 'http://localhost:11434/api/generate',
                model: 'llama2:7b',
                maxTokens: 2048,
                temperature: 0.3,
                requiresApiKey: false,
                icon: 'ü¶ô',
                description: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –ª–æ–∫–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å',
                features: ['code-analysis', 'recommendations']
            },
            
            // LM Studio
            'lmstudio-local': {
                id: 'lmstudio-local',
                name: 'LM Studio Local',
                provider: 'lmstudio',
                endpoint: 'http://localhost:1234/v1/chat/completions',
                model: 'local-model',
                maxTokens: 4096,
                temperature: 0.3,
                requiresApiKey: false,
                icon: 'üè†',
                description: '–õ–æ–∫–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å —á–µ—Ä–µ–∑ LM Studio',
                features: ['code-analysis', 'recommendations']
            },
            
            // –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä (fallback)
            'builtin-analyzer': {
                id: 'builtin-analyzer',
                name: '–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä',
                provider: 'builtin',
                endpoint: null,
                model: null,
                maxTokens: null,
                temperature: null,
                requiresApiKey: false,
                icon: '‚öôÔ∏è',
                description: '–ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –±–µ–∑ AI (–≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω)',
                features: ['basic-analysis', 'pattern-detection']
            }
        };

        this.defaultModel = 'builtin-analyzer';
        this.currentModel = this.defaultModel;
        this.apiKeys = {};
        this.customEndpoints = {};
    }

    // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
    getAllModels() {
        return Object.values(this.models);
    }

    // –ü–æ–ª—É—á–∏—Ç—å –º–æ–¥–µ–ª—å –ø–æ ID
    getModel(modelId) {
        return this.models[modelId] || null;
    }

    // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –º–æ–¥–µ–ª—å
    getCurrentModel() {
        return this.getModel(this.currentModel);
    }

    // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é –º–æ–¥–µ–ª—å
    setCurrentModel(modelId) {
        if (this.models[modelId]) {
            this.currentModel = modelId;
            return true;
        }
        return false;
    }

    // –ü–æ–ª—É—á–∏—Ç—å –º–æ–¥–µ–ª–∏ –ø–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É
    getModelsByProvider(provider) {
        return Object.values(this.models).filter(model => model.provider === provider);
    }

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏
    async isModelAvailable(modelId) {
        const model = this.getModel(modelId);
        if (!model) return false;

        // –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω
        if (model.provider === 'builtin') return true;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
        if (model.requiresApiKey && !this.getApiKey(model.provider)) {
            return false;
        }

        // –î–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å endpoint
        if (['ollama', 'lmstudio'].includes(model.provider)) {
            return await this.checkLocalEndpoint(model.endpoint);
        }

        return true;
    }

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π endpoint
    async checkLocalEndpoint(endpoint) {
        try {
            const response = await fetch(endpoint.replace('/api/generate', '/api/tags').replace('/v1/chat/completions', '/v1/models'), {
                method: 'GET',
                timeout: 5000
            });
            return response.ok;
        } catch (error) {
            return false;
        }
    }

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API –∫–ª—é—á–∞–º–∏
    setApiKey(provider, apiKey) {
        this.apiKeys[provider] = apiKey;
        this.saveConfig();
    }

    getApiKey(provider) {
        return this.apiKeys[provider] || process.env[`${provider.toUpperCase()}_API_KEY`] || null;
    }

    removeApiKey(provider) {
        delete this.apiKeys[provider];
        this.saveConfig();
    }

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ endpoints
    setCustomEndpoint(modelId, endpoint) {
        this.customEndpoints[modelId] = endpoint;
        this.saveConfig();
    }

    getEndpoint(modelId) {
        const model = this.getModel(modelId);
        if (!model) return null;
        
        return this.customEndpoints[modelId] || model.endpoint;
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ/–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    saveConfig() {
        const config = {
            currentModel: this.currentModel,
            apiKeys: this.apiKeys,
            customEndpoints: this.customEndpoints
        };
        
        if (typeof localStorage !== 'undefined') {
            localStorage.setItem('copilot-models-config', JSON.stringify(config));
        }
    }

    loadConfig() {
        try {
            if (typeof localStorage !== 'undefined') {
                const saved = localStorage.getItem('copilot-models-config');
                if (saved) {
                    const config = JSON.parse(saved);
                    this.currentModel = config.currentModel || this.defaultModel;
                    this.apiKeys = config.apiKeys || {};
                    this.customEndpoints = config.customEndpoints || {};
                }
            }
        } catch (error) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –º–æ–¥–µ–ª–µ–π:', error);
        }
    }

    // –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∞–Ω–∞–ª–∏–∑–∞
    getPrompts() {
        return {
            codeAnalysis: `–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É Node-RED –ø–æ—Ç–æ–∫–æ–≤. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –ø–æ—Ç–æ–∫ –∏ –Ω–∞–π–¥–∏:
1. –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –æ—à–∏–±–∫–∏
2. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
3. –ü—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
4. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é

–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
{
  "issues": [{"type": "—Ç–∏–ø", "severity": "high/warning/info", "title": "–∑–∞–≥–æ–ª–æ–≤–æ–∫", "message": "–æ–ø–∏—Å–∞–Ω–∏–µ", "action": "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è"}],
  "patterns": [{"name": "–Ω–∞–∑–≤–∞–Ω–∏–µ", "confidence": —á–∏—Å–ª–æ, "description": "–æ–ø–∏—Å–∞–Ω–∏–µ"}],
  "recommendations": ["—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è1", "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è2"]
}`,

            securityCheck: `–ü—Ä–æ–≤–µ–¥–∏ –∞–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Node-RED –ø–æ—Ç–æ–∫–∞. –ù–∞–π–¥–∏:
1. –£—è–∑–≤–∏–º–æ—Å—Ç–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
2. –ù–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏
3. –ü—Ä–æ–±–ª–µ–º—ã —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
4. –£—Ç–µ—á–∫–∏ –¥–∞–Ω–Ω—ã—Ö

–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º.`,

            performanceAnalysis: `–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å Node-RED –ø–æ—Ç–æ–∫–∞:
1. –£–∑–∫–∏–µ –º–µ—Å—Ç–∞
2. –ù–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
3. –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–∞–º—è—Ç—å—é
4. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏.`
        };
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –º–æ–¥–µ–ª–∏
    validateModelConfig(config) {
        const required = ['id', 'name', 'provider'];
        return required.every(field => config[field]);
    }

    // –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –º–æ–¥–µ–ª—å
    addCustomModel(config) {
        if (!this.validateModelConfig(config)) {
            throw new Error('–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–∏');
        }

        this.models[config.id] = {
            ...config,
            icon: config.icon || 'üîß',
            features: config.features || ['code-analysis']
        };

        this.saveConfig();
        return true;
    }

    // –£–¥–∞–ª–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –º–æ–¥–µ–ª—å
    removeCustomModel(modelId) {
        if (this.models[modelId] && !this.isBuiltinModel(modelId)) {
            delete this.models[modelId];
            
            // –ï—Å–ª–∏ —É–¥–∞–ª—è–µ–º–∞—è –º–æ–¥–µ–ª—å –±—ã–ª–∞ —Ç–µ–∫—É—â–µ–π, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ default
            if (this.currentModel === modelId) {
                this.currentModel = this.defaultModel;
            }
            
            this.saveConfig();
            return true;
        }
        return false;
    }

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–æ–¥–µ–ª—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π
    isBuiltinModel(modelId) {
        const builtinModels = [
            'openai-gpt-3.5', 'openai-gpt-4',
            'claude-3-haiku', 'claude-3-sonnet',
            'ollama-codellama', 'ollama-llama2',
            'lmstudio-local', 'builtin-analyzer'
        ];
        return builtinModels.includes(modelId);
    }

    // –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    getUsageStats() {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π
        return {
            totalRequests: 0,
            successfulRequests: 0,
            failedRequests: 0,
            averageResponseTime: 0
        };
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å
if (typeof module !== 'undefined' && module.exports) {
    module.exports = ModelsConfig;
} else {
    window.ModelsConfig = ModelsConfig;
}
